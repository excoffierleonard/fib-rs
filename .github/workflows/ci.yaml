name: CI

permissions:
  contents: read

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  code-quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust toolchain and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup
            ~/.cargo
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-features --all-targets -- -D warnings

  code-correctness-checks:
    name: Code Correctness Checks
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust toolchain and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup
            ~/.cargo
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --all-features --all-targets

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --all-features --all-targets
    
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --all-targets

  pre-publishing-checks:
    name: Pre-publishing Checks
    needs: [code-quality-checks, code-correctness-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust toolchain and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup
            ~/.cargo
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Verify Documentation
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --all-features --document-private-items

      - name: Run package checks script (cargo package and version checks)
        run: ./scripts/package-checks.sh

      - name: Dry run publish for core crate
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run 
